package kr.or.ddit.board.review_board.service.impl;

import java.io.File;
import java.io.IOException;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.List;
import java.util.Map;
import java.util.UUID;

import javax.inject.Inject;

import org.springframework.stereotype.Service;
import org.springframework.web.multipart.MultipartFile;
import org.springframework.web.multipart.MultipartHttpServletRequest;

import kr.or.ddit.board.review_board.mapper.ReviewBoardMapper;
import kr.or.ddit.board.review_board.service.ReviewBoardService;
import kr.or.ddit.vo.AftusBbscttVO;
import kr.or.ddit.vo.SprviseAtchmnflVO;
import kr.or.ddit.vo.SrvcRequstVO;
import lombok.extern.slf4j.Slf4j;

@Slf4j
@Service
public class ReviewBoardServiceImpl implements ReviewBoardService {
	
	@Inject
	String uploadFolder;

	@Inject
	ReviewBoardMapper reviewBoardMapper;
	
	MultipartHttpServletRequest request;
	
	@Override
	public List<AftusBbscttVO> list(Map<String, Object> map) {
		return this.reviewBoardMapper.list(map);
	}

	@Override
	public List<SrvcRequstVO> listModal(String userId) {
		return this.reviewBoardMapper.listModal(userId);
	}
	
	//로그인한 회원 리뷰 조회
	@Override
	public List<AftusBbscttVO> listMyReview(String userId) {
		return this.reviewBoardMapper.listMyReview(userId);
	}
	
	@Override
	public int create(AftusBbscttVO aftusBbscttVO) {
		
		return this.reviewBoardMapper.create(aftusBbscttVO);
	}

	@Override
	public AftusBbscttVO detail(int aftusBbscttNo) {
		return this.reviewBoardMapper.detail(aftusBbscttNo);
	}

	@Override
	public int delete(int aftusBbscttNo) {
		return this.reviewBoardMapper.delete(aftusBbscttNo);
	}

	@Override
	public int createAjax(AftusBbscttVO aftusBbscttVO) {
		
		
		//원본 파일명
		String originalFilename = "";
		//저장될파일명
		String uploadFileName = "";
		//파일 크기
		long size = 0;
		//MIME타입
		String mime = "";
		//sql 성공한 행의 수
				
				
		int result = this.reviewBoardMapper.createAjax(aftusBbscttVO);
		
		int atchmnflNo = 1;
		
		String userId = "a002";
		
		MultipartFile[] uploadFile = aftusBbscttVO.getUploadFile();
				
		for(MultipartFile multipartFile : uploadFile) {
			log.info("--------------");
			log.info("원본 파일명 : " + multipartFile.getOriginalFilename());
			log.info("파일 크기    : " + multipartFile.getSize());
			log.info("MIME타입  : " + multipartFile.getContentType());
			
			originalFilename = multipartFile.getOriginalFilename();
			size = multipartFile.getSize();
			mime = multipartFile.getContentType();
			
			UUID uuid = UUID.randomUUID();
			uploadFileName = uuid.toString() + "_" + originalFilename;
			
			//File 객체 설계 (어디로 복사할 것인지? 경로)
			File saveFile = new File(uploadFolder + "\\" + getFolder(), uploadFileName);
			
			
			try {
			     
				multipartFile.transferTo(saveFile);
				
				//ATTACH테이블에 insert
				SprviseAtchmnflVO sprviseAtchmnflVO = new SprviseAtchmnflVO();
				
				sprviseAtchmnflVO.setAtchmnflNo(atchmnflNo++);
				sprviseAtchmnflVO.setAtchmnflCours("/" + getFolder().replace("\\", "/") + "/"
						+ uploadFileName);  
				sprviseAtchmnflVO.setAtchmnflNm(originalFilename);
				sprviseAtchmnflVO.setStoreAtchmnflNm(uploadFileName);
				sprviseAtchmnflVO.setAtchmnflTy(mime);
				
				sprviseAtchmnflVO.setUserId(userId);
//				sprviseAtchmnflVO.setSeq(seq++);
				
				
				result += this.reviewBoardMapper.insertFile(sprviseAtchmnflVO);
							
				} catch (IllegalStateException | IOException e) {
					log.error(e.getMessage());
				}
			}
				
		
		
		/*
		 * log.info("insert : " + aftusBbscttVO); if
		 * (aftusBbscttVO.getUploadFile().length != 0) { log.info("이미지파일 처리하러~" +
		 * aftusBbscttVO.getUploadFile().length); fileUpload(aftusBbscttVO); }
		 */

		return result;
	}
	
	
//	public AftusBbscttVO fileUpload(AftusBbscttVO aftusBbscttVO) {
//		
//		//원본 파일명
//		String originalFilename = "";
//		//저장될파일명
//		String uploadFileName = "";
//		//파일 크기
//		long size = 0;
//		//MIME타입
//		String mime = "";
//		//sql 성공한 행의 수
//		
//		
//		int result = this.reviewBoardMapper.createAjax(aftusBbscttVO);
//		
//		int atchmnflNo = 0;
//		
//		MultipartFile[] uploadFile = aftusBbscttVO.getUploadFile();
//		
//		for(MultipartFile multipartFile : uploadFile) {
//			log.info("--------------");
//			log.info("원본 파일명 : " + multipartFile.getOriginalFilename());
//			log.info("파일 크기    : " + multipartFile.getSize());
//			log.info("MIME타입  : " + multipartFile.getContentType());
//			
//			originalFilename = multipartFile.getOriginalFilename();
//			size = multipartFile.getSize();
//			mime = multipartFile.getContentType();
//			
//			UUID uuid = UUID.randomUUID();
//	        uploadFileName = uuid.toString() + "_" + originalFilename;
//	        
//	        //File 객체 설계 (어디로 복사할 것인지? 경로)
//	        File saveFile = new File(uploadFolder + "\\" + getFolder(), uploadFileName);
//	        
//	        
//	        try {
//	     
//				multipartFile.transferTo(saveFile);
//				
//				//ATTACH테이블에 insert
//				SprviseAtchmnflVO sprviseAtchmnflVO = new SprviseAtchmnflVO();
//				
//				sprviseAtchmnflVO.setAtchmnflCours("/" + getFolder().replace("\\", "/") + "/"
//						+ uploadFileName);  
//				sprviseAtchmnflVO.setAtchmnflNm(originalFilename);
//				sprviseAtchmnflVO.setAtchmnflNm(uploadFileName);
//				sprviseAtchmnflVO.setAtchmnflTy(mime);
//				sprviseAtchmnflVO.setAtchmnflNo(atchmnflNo++);
//				
////				sprviseAtchmnflVO.setSeq(seq++);
//				
//				
//				result += this.reviewBoardMapper.insertFile(sprviseAtchmnflVO);
//					
//			} catch (IllegalStateException | IOException e) {
//				log.error(e.getMessage());
//			}
//		}
//		return aftusBbscttVO;
//	}
	
	//연/월/일 폴더 생성
	public String getFolder() {
		//2024-01-30 형식(format) 지정
		//간단한 날짜 형식
		SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd");
		//날짜 객체 생성(java.util 패키지)
		Date date = new Date();
		//2024-01-30
		String str = sdf.format(date);
		//2024-01-30 -> 2024\\01\\30
		return str.replace("-", File.separator);
	}
	

}
