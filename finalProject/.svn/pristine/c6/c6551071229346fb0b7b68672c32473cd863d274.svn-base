package kr.or.ddit.board.review_board.controller;

import java.util.List;
import java.util.Map;

import javax.inject.Inject;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpSession;

import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.ResponseBody;
import org.springframework.web.multipart.MultipartHttpServletRequest;

import kr.or.ddit.board.freeboard.controller.UploadController;
import kr.or.ddit.board.review_board.service.ReviewBoardService;
import kr.or.ddit.vo.AftusBbscttVO;
import kr.or.ddit.vo.SprviseAtchmnflVO;
import kr.or.ddit.vo.SrvcRequstVO;
import lombok.extern.slf4j.Slf4j;

@Slf4j
@Controller
@RequestMapping("/reviewBoard")
public class ReviewBoardController {
	
	
	@Inject
	ReviewBoardService reviewBoardService;
	
	@Inject
	MultipartHttpServletRequest request;
	
	@Inject
	UploadController uploadController;
	

	public String userIdCk(HttpServletRequest request) {
		
		HttpSession session = request.getSession();
		
		String userId = "";
		
		if (session.getAttribute("memSession")!=null) {
			Object memSession = (Object)session.getAttribute("memSession");
			userId = (String)((Map <String, Object>) memSession).get("userId");

			log.info(userId);
		}
		return userId;
	}
		
	
	@GetMapping("/main")
	public String main(HttpServletRequest request
			,Model model) {
		
		String userId = userIdCk(request);
		
		log.info("main : " + userId);
		
		model.addAttribute("userId", userId);
		
		return "reviewBoard/index";
	}
		

	
	
//	@GetMapping("/list")
//	public String list(Model model, Map<String,Object> map) {
//		
//		List<AftusBbscttVO> aftusBbscttVoList = this.reviewBoardService.list(map);
//
//		
//		model.addAttribute("aftusBbscttVoList", aftusBbscttVoList);
//		
//		
//		log.info("list -> aftusBbscttVoList" + aftusBbscttVoList);
//
//		//forwarding : jsp
//		return "reviewBoard/index";
//	}
	
	@ResponseBody
	@PostMapping("/listAjax")
	public List<AftusBbscttVO> listAjax (@RequestBody(required=false) Map<String, Object> map) {
		
		log.info("list -> map : " + map);
		
		List<AftusBbscttVO> aftusBbscttVoList = this.reviewBoardService.list(map);
		
		log.info("list -> aftusBbscttVoList" + aftusBbscttVoList);
		
		return aftusBbscttVoList;
	}
	
	@ResponseBody
	@PostMapping("/listModal")
	public List<SrvcRequstVO> listModal (String userId) {
		
		log.info("userId : " + userId);
		
		List<SrvcRequstVO> SrvcRequstVOList = this.reviewBoardService.listModal(userId);
		
		log.info("listModal -> SrvcRequstVOList" + SrvcRequstVOList);
		
		return SrvcRequstVOList;
	}
	
	@ResponseBody
	@PostMapping("/listMyReview")
	public List<AftusBbscttVO> listMyReview (String userId) {
		
		log.info("userId : " + userId);
		
		List<AftusBbscttVO> aftusBbscttVoList = this.reviewBoardService.listMyReview(userId);
		
		log.info("listMyReview -> AftusBbscttVOList" + aftusBbscttVoList);
		
		return aftusBbscttVoList;
	}
	
	

	@GetMapping("/create") 
	public String create(int srvcRequstNo,
						Model model) { 
		//@request param 안 써도 됨!
		log.info("srvcRequstNo" + srvcRequstNo);
		model.addAttribute("srvcRequstNo", srvcRequstNo); 
		
		return "reviewBoard/create"; 
		}

	
//	@GetMapping("/create")
//	public String create() {
//		log.info("보이냐");
//		return "reviewBoard/create";
//	}
	
	
	/*
	 * @PostMapping("/create") public String create(AftusBbscttVO aftusBbscttVO) {
	 * 
	 * String userId="a002"; aftusBbscttVO.setUserId(userId);
	 * 
	 * log.info("create -> aftusBbscttVO : " + aftusBbscttVO); int result =
	 * this.reviewBoardService.create(aftusBbscttVO); log.info("create -> result : "
	 * + result);
	 * 
	 * return "Redirect:reviewBoard/detail?aftusBbscttNo=" +
	 * aftusBbscttVO.getAftusBbscttNo(); }
	 */
	
	@PostMapping("/createAjax")
	public String createAjax(HttpServletRequest request, AftusBbscttVO aftusBbscttVO) {
		
		String userId = userIdCk(request);
		
		aftusBbscttVO.setUserId(userId);
		
		log.info("createAjax -> aftusBbscttVO : " + aftusBbscttVO);
		
		int result = this.reviewBoardService.createAjax(aftusBbscttVO);
		
		log.info("createAjax -> result : " + result);
		log.info("createAjax -> aftusBbscttVO : " + aftusBbscttVO);
		
//		return aftusBbscttVO.getAftusBbscttNo();
	    return "redirect:/reviewBoard/detail?aftusBbscttNo=" + aftusBbscttVO.getAftusBbscttNo();

	}
	
	@GetMapping("/detail")
	public String detail(HttpServletRequest request, int aftusBbscttNo, Model model) {
		
		log.info("detail -> aftusBbscttNo : " + aftusBbscttNo);
		
		String sessionId = userIdCk(request);
		
		//조회수 증가
		int result = this.reviewBoardService.updateCnt(aftusBbscttNo);
		
		log.info("cnt result : " + result);
		
		//상세페이지
		AftusBbscttVO aftusBbscttVO = this.reviewBoardService.detail(aftusBbscttNo);
		
		log.info("detail -> aftusBbscttVO : " + aftusBbscttVO);
		
		model.addAttribute("sessionId", sessionId);
		model.addAttribute("aftusBbscttVO", aftusBbscttVO);
		
		int sprviseAtchmnflNo = aftusBbscttVO.getSprviseAtchmnflNo();
		
		
		log.info("fileList -> sprviseAtchmnflNo : " + sprviseAtchmnflNo);
		
		List<SprviseAtchmnflVO> fileList = this.reviewBoardService.fileList(sprviseAtchmnflNo);

		log.info("fileList : " + fileList);
		
		model.addAttribute("fileList", fileList);
		
		return "reviewBoard/detail";
	}
	
//	@ResponseBody
//	@PostMapping("/fileList")
//	public List<SprviseAtchmnflVO> fileList(int sprviseAtchmnflNo, Model model) {
//		log.info("fileList -> sprviseAtchmnflNo : " + sprviseAtchmnflNo);
//		
//		List<SprviseAtchmnflVO> sprviseAtchmnflVoList = this.reviewBoardService.fileList(sprviseAtchmnflNo);
//		log.info("sprviseAtchmnflVoList : " + sprviseAtchmnflVoList);
//		
//		model.addAttribute(sprviseAtchmnflVoList);
//		
//		return sprviseAtchmnflVoList;
//	
//	}
	
	@ResponseBody
	@PostMapping("/delete")
	public int delete(int aftusBbscttNo) {
		
		log.info("aftusBbscttNo" + aftusBbscttNo);
		
		int result = this.reviewBoardService.delete(aftusBbscttNo);
		
		log.info("result" + result);
		
		return result;
		
	}
	
	@PostMapping("/update")
	public String update(HttpServletRequest request, AftusBbscttVO aftusBbscttVO) {
		
		String userId = userIdCk(request);
		
		aftusBbscttVO.setUserId(userId);
		
		log.info("update -> aftusBbscttVO : " + aftusBbscttVO);
		
		int result = this.reviewBoardService.update(aftusBbscttVO);
		
		log.info("update -> result : " + result);
		
		return "redirect:/reviewBoard/detail?aftusBbscttNo=" + aftusBbscttVO.getAftusBbscttNo();
		
		
		
	}
	
	
	@ResponseBody
	@PostMapping("/fileDel")
	public int fileDel(@RequestBody SprviseAtchmnflVO sprviseAtchmnflVO) {
		
		log.info("delFileInfo -> sprviseAtchmnflVO : " + sprviseAtchmnflVO);
		
		int result = this.reviewBoardService.fileDel(sprviseAtchmnflVO);
		
		log.info("fileDel -> result : " + result);
		
		return result;
	}
	
	
	
	
}
