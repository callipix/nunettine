package kr.or.ddit.chatting.websocket;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.messaging.handler.annotation.MessageMapping;
import org.springframework.messaging.simp.SimpMessagingTemplate;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;

import kr.or.ddit.chatting.service.MessageService;
import kr.or.ddit.chatting.vo.MessageVO;
import lombok.RequiredArgsConstructor;
import lombok.extern.slf4j.Slf4j;
@Slf4j
@Controller
@RequiredArgsConstructor
public class StompChatController {
	
	Model model;
	@Autowired
	private MessageService messageService;
	private final SimpMessagingTemplate template;
//	@ResponseBody
//	@PostMapping("/chatMessageList")
//	public List<MessageVO> messageList(@RequestBody int roomNo) throws JsonProcessingException{
//		
//		List<MessageVO> messageList = this.messageService.messageList(roomNo);
//		
//		ObjectMapper objp =  new ObjectMapper();
//		String myRoomChat = objp.writeValueAsString(messageList);
//		model.addAttribute("myRoomChat" , myRoomChat);
//		model.addAttribute("messageList" , messageList);
//		return messageList;
//	}
	
	@MessageMapping("/chat/enter")
	public void enter(MessageVO message) {
		message.setMsgCont(" 님이 채팅방에 참여하였습니다");
		
		template.convertAndSend("/sub/chat/room/" + message.getRoomNo(), message);
		
	}
	@MessageMapping("/chat/message")
	public void message(MessageVO message) {
		log.info("채팅전송체크{}");
		template.convertAndSend("/sub/chat/room/" + message.getRoomNo() , message);
		
		int result = this.messageService.insert(message);
		
		if(result > 0) {
			System.out.println("메세지 전송 성공");
		} else {
			System.out.println("실패");
		}
	}
}
