package kr.or.ddit.onedayclass.controller;

import java.io.File;
import java.io.IOException;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import java.util.UUID;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpSession;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.ResponseBody;
import org.springframework.web.multipart.MultipartFile;

import kr.or.ddit.onedayclass.service.OnedayClassService;
import kr.or.ddit.vo.BcityVO;
import kr.or.ddit.vo.BrtcVO;
import kr.or.ddit.vo.SpcltyRealmVO;
import kr.or.ddit.vo.SprviseAtchmnfl;
import kr.or.ddit.vo.SprviseAtchmnflVO;
import kr.or.ddit.vo.VOndyclProUsersVO;
import kr.or.ddit.vo.VOndyclSchdulVO;
import lombok.extern.slf4j.Slf4j;

@Controller
@Slf4j
@RequestMapping("/onedayClass")
public class OnedayClassController {
	
	@Autowired
	OnedayClassService onedayClassService;
	
	@Autowired
	String uploadFolder;
	
	//원데이클래스 게시판 호출
	@GetMapping("/main")
	public String main(Model model) {
		List<VOndyclProUsersVO> vOndyclProUsersVOList = this.onedayClassService.vOndyclProUsersVOList();
		int countOndycl = this.onedayClassService.countOndycl();
		String codeNm;
		String codeCd;
		
		//카테고리 이름
		for(int i=0;i<vOndyclProUsersVOList.size();i++) {
			codeCd = vOndyclProUsersVOList.get(i).getSpcltyRealmCode();
			codeNm = this.onedayClassService.getCodeNm(codeCd);
			
			vOndyclProUsersVOList.get(i).setSpcltyRealmCode(codeNm);
		}
		
		List<SpcltyRealmVO> codeList = this.onedayClassService.category();
		model.addAttribute("codeList", codeList);
		List<BcityVO> bcityVOList = this.onedayClassService.getBcity();
		for(int i=0;i<bcityVOList.size();i++) {
			if(bcityVOList.get(i).getBcityCode().equals("00")) {
				bcityVOList.remove(i);
			}
		}
		
		model.addAttribute("bcityVOList", bcityVOList);
		model.addAttribute("vOndyclProUsersVOList", vOndyclProUsersVOList);
		model.addAttribute("countOndycl", countOndycl);
		return "onedayClass/main";
	}
	
	//전문분야 검색 실행
	@ResponseBody
	@GetMapping("/categorySearch")
	public List<VOndyclProUsersVO> categorySearch(String spcltyRealmCode) {
		Map<String, Object> searchMap = new HashMap<String, Object>();
		searchMap.put("keyword","category");
		searchMap.put("spcltyRealmCode",spcltyRealmCode);
		List<VOndyclProUsersVO> vOndyclProUsersVOList = this.onedayClassService.searchClass(searchMap);
		String codeNm;
		String codeCd;
		//카테고리 이름
		for(int i=0;i<vOndyclProUsersVOList.size();i++) {
			codeCd = vOndyclProUsersVOList.get(i).getSpcltyRealmCode();
			codeNm = this.onedayClassService.getCodeNm(codeCd);
			
			vOndyclProUsersVOList.get(i).setSpcltyRealmCode(codeNm);
		}
		
		return vOndyclProUsersVOList;
	}
	
	//원데이클래스 검색
	@ResponseBody
	@GetMapping("/searchClass")
	public List<VOndyclProUsersVO> searchClass(String keyword, String firstInput
			, @RequestParam(required = false) String secondInput) {
		String codeNm;
		String codeCd;
		Map<String, Object> searchMap = new HashMap<String, Object>();
		searchMap.put("keyword",keyword);
		if(secondInput!=null && !secondInput.isEmpty()) {
			String rpFirst = firstInput.replaceAll("-","");
			String rpSecond = secondInput.replaceAll("-","");
			searchMap.put("firstInput",rpFirst);
			searchMap.put("secondInput",rpSecond);
		}else {
			searchMap.put("firstInput",firstInput);
		}
		List<VOndyclProUsersVO> vOndyclProUsersVOList = this.onedayClassService.searchClass(searchMap);
		//카테고리 이름
		for(int i=0;i<vOndyclProUsersVOList.size();i++) {
			codeCd = vOndyclProUsersVOList.get(i).getSpcltyRealmCode();
			codeNm = this.onedayClassService.getCodeNm(codeCd);
			
			vOndyclProUsersVOList.get(i).setSpcltyRealmCode(codeNm);
		}
		
		for(int i=0;i<vOndyclProUsersVOList.size();i++) {
		}
		return vOndyclProUsersVOList;
	}
	
	//주소 검색
	@ResponseBody
	@GetMapping("/localSearch")
	public List<VOndyclProUsersVO> localSearch(String cityName) {
		Map<String, Object> searchMap = new HashMap<String, Object>();
		if(cityName.length() >= 8) {
			if(cityName.substring(6).equals("전체")) {
				searchMap.put("keyword","cityAll");
				searchMap.put("cityName",cityName.substring(0, 2));
			}
		}else if(cityName.substring(0, 2).equals("제주")){
			if(cityName.length() == 8) {
				searchMap.put("keyword","cityAll");
				searchMap.put("cityName","제주특별자치도" + cityName.substring(5));
			}else {
				searchMap.put("keyword","city");
				searchMap.put("cityName",cityName);
			}
		}else if(cityName.substring(0, 2).equals("세종")){
			searchMap.put("keyword","cityAll");
			searchMap.put("cityName","세종특별자치시" + cityName.substring(5));
		}else {
			searchMap.put("keyword","city");
			searchMap.put("cityName",cityName);
		}
		List<VOndyclProUsersVO> vOndyclProUsersVOList = this.onedayClassService.searchClass(searchMap);
		
		return vOndyclProUsersVOList;
	}
	
	//클래스 삭제
	@ResponseBody
	@GetMapping("/deleteClass")
	public int deleteClass(String classNo) {
		log.info("classNo : " + classNo);
		int result = this.onedayClassService.deleteClass(classNo);
		
		return result;
	}
	
	//시군구 모달에 출력
	@ResponseBody
	@GetMapping("/brtcSelect")
	public List<BrtcVO> brtcSelect(String bcityCode){
		List<BrtcVO> brtcVOList = this.onedayClassService.brtcSelect(bcityCode);
		
		return brtcVOList;
	}
	
	//원데이클래스 등록화면
	@GetMapping("/createOndycl")
	public String createOndycl() {
		return "onedayClass/createOndycl";
	}
	
	//원데이클래스 수정화면으로
	@PostMapping("/updateClass")
	public String updateClass(VOndyclSchdulVO vOndyclSchdulVO, Model model) {
		log.info("vOndyclSchdulVO : " + vOndyclSchdulVO);
		String ondyclNo = vOndyclSchdulVO.getOndyclNo() + "";
		List<SprviseAtchmnflVO> sprviseAtchmnflVOList = this.onedayClassService.fileList(ondyclNo);
		String classDate = vOndyclSchdulVO.getOndyclSchdulDe();
		
		log.info("sprviseAtchmnflVOList"+sprviseAtchmnflVOList);
		model.addAttribute("vOndyclSchdulVO", vOndyclSchdulVO);
		model.addAttribute("sprviseAtchmnflVOList", sprviseAtchmnflVOList);
		
		return "onedayClass/updateOndycl";
	}
	
	//원데이클래스 등록
	@PostMapping("/createOndycl")
	public String createOndycl(VOndyclSchdulVO vOndyclSchdulVO) {
		log.info("넘어온 원데이클래스 정보 : " + vOndyclSchdulVO);
		Map<String, Object> map = new HashMap<String, Object>();
		SprviseAtchmnflVO sprviseAtchmnflVO = new SprviseAtchmnflVO();
		int sprviseAtchmnflNo = this.onedayClassService.getAttachNo();
		int insertClNum = this.onedayClassService.getInsertClNum();
		int result = 0;
		String proId = vOndyclSchdulVO.getProId();
		String ondyclSchdulDe = vOndyclSchdulVO.getOndyclSchdulDe();
		ondyclSchdulDe = ondyclSchdulDe.replaceAll("-", "");
		
		map.put("ondyclNo",insertClNum);
		map.put("ondyclNm",vOndyclSchdulVO.getOndyclNm());
		map.put("ondyclCn",vOndyclSchdulVO.getOndyclCn());
		map.put("ondyclPc",vOndyclSchdulVO.getOndyclPc());
		map.put("ondyclPsncpa",vOndyclSchdulVO.getOndyclPsncpa());
		map.put("proId",proId);
		map.put("ondyclSchdulDe",ondyclSchdulDe);
		map.put("ondyclSchdulBeginTime",vOndyclSchdulVO.getOndyclSchdulBeginTime());
		map.put("ondyclSchdulEndTime",vOndyclSchdulVO.getOndyclSchdulEndTime());
		map.put("sprviseAtchmnflNo",sprviseAtchmnflNo);
		
		//썸네일 등록
		if(vOndyclSchdulVO.getUploadProfile() != null) {
			log.info("썸네일 메소드 시작");
			MultipartFile multipartFile = vOndyclSchdulVO.getUploadProfile();
			
			File uploadPath = new File(uploadFolder, getFolder());
			if(!uploadPath.exists()) {
				uploadPath.mkdirs();
			}
			 String uploadFileName = multipartFile.getOriginalFilename();
			 
			 UUID uuid = UUID.randomUUID();
			 uploadFileName = uuid.toString() + "_" + uploadFileName;
			 
			 File saveFile = new File(uploadPath, uploadFileName);
			 log.info("프로필사진 이름  : " + saveFile);
			 try {
				multipartFile.transferTo(saveFile);
			} catch (IllegalStateException | IOException e) {
				e.printStackTrace();
			}
			 
			 String url = "/images/" + getFolder().replace("\\", "/") + "/" + uploadFileName;
			 
			 log.info("썸네일 url : " + url);
			 map.put("ondyclThumbPhoto",url);
		}else {
			map.put("ondyclThumbPhoto",null);
		} //썸네일 사진 등록 끝
		
		//첨부파일(이미지들) 추가
		if(vOndyclSchdulVO.getUploadFile() != null) {
			log.info("첨부파일 메소드 시작");
			String originFileName = ""; //원본파일명
			String newFileName = "";
			String mimeType = ""; //파일 형식
			long size = 0; //파일 사이즈
			int seq = 1;
			
			for(MultipartFile uploadFiles : vOndyclSchdulVO.getUploadFile()) {
				originFileName = uploadFiles.getOriginalFilename();
				size = uploadFiles.getSize();
				mimeType = uploadFiles.getContentType();
				
				UUID uuid = UUID.randomUUID();
				newFileName = uuid.toString() + "_" + originFileName;
				log.info("첨부파일 정보 : " + originFileName+"/"+size+"/"+mimeType+"/"+newFileName);
				File saveFiles = new File(uploadFolder + "\\" + getFolder(), newFileName);
				String url = "/images/" + getFolder().replace("\\", "/") + "/" + newFileName;
				try {
					uploadFiles.transferTo(saveFiles);
					sprviseAtchmnflVO.setSprviseAtchmnflNo(sprviseAtchmnflNo);;
					sprviseAtchmnflVO.setAtchmnflCours(url);
					sprviseAtchmnflVO.setAtchmnflNm(originFileName);
					sprviseAtchmnflVO.setStoreAtchmnflNm(newFileName);
					sprviseAtchmnflVO.setAtchmnflTy(mimeType);
					sprviseAtchmnflVO.setAtchmnflNo(seq++);
					sprviseAtchmnflVO.setUserId(proId);
					log.info("sprviseAtchmnflVO : " + sprviseAtchmnflVO);
					
					result += this.onedayClassService.addSprviseAtchmnfl(sprviseAtchmnflVO);
				} catch (IllegalStateException | IOException e) {
					e.printStackTrace();
				}
			}
		}//첨부파일추가 끝
		log.info("sql가기 직전 map : " + map);
		
		result += this.onedayClassService.createOndycl(map);
		
		log.info("원데이클래스 result 수 : " + result);
		
		return "redirect:/onedayClass/onedayClassDetail?ondyclNo="+insertClNum;
	}
	
	//원데이클래스 상세페이지
	@GetMapping("/onedayClassDetail")
	public String detail(String ondyclNo, Model model) {
		log.info("ondyclNo : " + ondyclNo);
		VOndyclProUsersVO vOndyclProUsersVO = this.onedayClassService.detail(ondyclNo);
		List<SprviseAtchmnflVO> sprviseAtchmnflVOList = this.onedayClassService.fileList(ondyclNo);
		
		model.addAttribute("sprviseAtchmnflVOList", sprviseAtchmnflVOList);
		model.addAttribute("vOndyclProUsersVO", vOndyclProUsersVO);
		log.info("vOndyclProUsersVO : "+vOndyclProUsersVO);
		return "onedayClass/onedayClassDetail";
	}
	
	public String getFolder() {
		SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd");
		Date date = new Date();
		String str = sdf.format(date);
		
		return str.replace("-", File.separator);
	}
	
}
