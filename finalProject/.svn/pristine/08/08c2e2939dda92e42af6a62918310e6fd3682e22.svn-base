package kr.or.ddit.pro_service.service_request.service.impl;

import java.util.HashMap;
import java.util.List;
import java.util.Map;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

import kr.or.ddit.pro_service.service_inquiry.mapper.SrvcBtfInqryMapper;
import kr.or.ddit.pro_service.service_request.mapper.SrvcRequstMapper;
import kr.or.ddit.pro_service.service_request.service.SrvcRequstService;
import kr.or.ddit.pro_service.service_request.vo.V_SrvcRequstVO;
import kr.or.ddit.vo.UsersVO;
import lombok.extern.slf4j.Slf4j;

@Service
@Slf4j
public class SrvcRequstSeviceImpl implements SrvcRequstService {

	@Autowired
	SrvcBtfInqryMapper srvcBtfInqryMapper;
	
	@Autowired
	SrvcRequstMapper SrvcRequstMapper;
	
	String userId = "testPro";
	V_SrvcRequstVO vSrvcRequstVO = new V_SrvcRequstVO();

	@Override
	public UsersVO userChk(String userId) { 
		
		UsersVO usersVO = this.srvcBtfInqryMapper.userChk(userId);
		
		if(usersVO.getEmplyrTy().equals("ET01")) { // 회원일 경우, 프로 닉네임을 얻기 위함
			usersVO.setEmplyrTy("ET02");
			
		}else if(usersVO.getEmplyrTy().equals("ET02")) { // 프로일 경우, 회원 닉네임을 얻기 위함
			usersVO.setEmplyrTy("ET01");
		}
		log.info("userChk -> usersVO : " + usersVO.toString());
		
		return usersVO;
	}

	@Override
	public List<V_SrvcRequstVO> srvcRqList(V_SrvcRequstVO vSrvcRequstVO) {
		UsersVO usersVO = userChk(userId);
		vSrvcRequstVO.setUserId(usersVO.getUserId());
		vSrvcRequstVO.setEmplyrTy(usersVO.getEmplyrTy());
		
		return this.SrvcRequstMapper.srvcRqList(vSrvcRequstVO);
	}

	@Override
	public V_SrvcRequstVO srvcRqDetail(V_SrvcRequstVO vSrvcRequstVO) {
		UsersVO usersVO = userChk(userId);
		vSrvcRequstVO.setUserId(usersVO.getUserId());
		vSrvcRequstVO.setEmplyrTy(usersVO.getEmplyrTy());
		
		return this.SrvcRequstMapper.srvcRqDetail(vSrvcRequstVO);
	}

	@Override
	public int processFn(int srvcRequstNo) {
		UsersVO usersVO = userChk(userId);
		vSrvcRequstVO.setUserId(usersVO.getUserId());
		vSrvcRequstVO.setEmplyrTy(usersVO.getEmplyrTy());
		
		Map<String, Object> paramMap = new HashMap<String, Object>(); 
		String emplyrTy = usersVO.getEmplyrTy();
		String processUser = "";
		if("ET01".equals(emplyrTy)) { // 프로
			processUser = "SRVC_REQUST_PROCESS_PRO";
		}else if("ET02".equals(emplyrTy)) { //회원
			processUser = "SRVC_REQUST_PROCESS_MBER";
		}
		paramMap.put("emplyrTy", emplyrTy);
		paramMap.put("processUser", processUser);
		paramMap.put("userId", userId);
		paramMap.put("srvcRequstNo", srvcRequstNo);
		
		return this.SrvcRequstMapper.processFn(paramMap);
	}

}
