package kr.or.ddit.pro_service.service_request.controller;

import java.util.HashMap;
import java.util.List;
import java.util.Map;

import javax.servlet.http.HttpServletRequest;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.ResponseBody;

import kr.or.ddit.pro_service.service_request.service.ReviewService;
import kr.or.ddit.pro_service.service_request.service.SrvcRequstService;
import kr.or.ddit.pro_service.service_request.vo.V_SrvcRequstVO;
import kr.or.ddit.util.ArticlePage;
import kr.or.ddit.vo.CommonCdDetailVO;
import kr.or.ddit.vo.ReviewVO;
import kr.or.ddit.vo.VProUsersVO;
import lombok.extern.slf4j.Slf4j;

@Slf4j
@Controller
@RequestMapping("/srvcRqReview")
public class ReviewController {
	
	@Autowired
	ReviewService reviewService;
	
	@Autowired
	SrvcRequstService srvcRequstService;
	
	@Autowired
	SrvcRequstController srvcRequstController;
	
	@GetMapping("/reInfo")
	@ResponseBody
	List<CommonCdDetailVO> reInfo() {
		List<CommonCdDetailVO> commonCdDetailVOList = this.reviewService.reInfo();
		log.info("[reviewController] 리뷰 공통코드 : " + commonCdDetailVOList);
		
		return commonCdDetailVOList;
	}
	
	@PostMapping("/reCreatePost")
	@ResponseBody
	public int reCreate(@RequestBody ReviewVO reviewVO) {
		log.info("reviewVO : " + reviewVO);
		
		int res = 0;
		res = this.reviewService.reCreate(reviewVO);
		
		return res; 
	}
	
	@GetMapping("/reDetail")
	@ResponseBody
	public List<ReviewVO> reDetail(HttpServletRequest request) {
		String userId = this.srvcRequstController.userIdChk(request);
		
		List<ReviewVO> reviewVOList = this.reviewService.reDetail(userId); 
		
		return reviewVOList;
		
	}
	
	@GetMapping("/reMgmt")
	public String reMgmt() {
		
		return "srvcRqReview/reviewMgmt";
	}
	
	@PostMapping("/reviewList")
	@ResponseBody
	public Map<String, Object> reviewList(@RequestBody(required = false) Map<String,Object> map, 
			HttpServletRequest request){
		String userId = this.srvcRequstController.userIdChk(request);
		map.put("userId", userId);
		
		int size = (Integer.parseInt(map.get("size").toString()));
		map.put("size", size);
		
		// 리뷰 목록 가져오기
		List<ReviewVO> reviewVOList = this.reviewService.reviewList(map);
		int total = this.reviewService.reviewTotal(map);
		
		String currentPage = map.get("currentPage").toString();
		String keyword = map.get("keyword").toString();
		
		// 목록 paging처리
		ArticlePage<ReviewVO> data 
		= new ArticlePage<ReviewVO>(total, Integer.parseInt(currentPage), size,reviewVOList, keyword);
		String url = "/srvcRqReview/reviewMgmt";
			data.setUrl(url);
			
		// 작성 안된 review 수
		int res = this.reviewService.reviewNoWrCnt(map);
		
		Map<String , Object> reviewListMap = new HashMap<String, Object>();
		reviewListMap.put("data", data);
		reviewListMap.put("reviewNoWrCnt", res);
	
		log.info("페이징 처리 : " + data);
		return reviewListMap;
	}
	
	@PostMapping("/showReview")
	@ResponseBody
	public Map<String, Object> showReview(@RequestParam int reNo) {
		Map<String, Object> showReviewMap = this.reviewService.showReview(reNo);
		
		return showReviewMap;
	}
		
		
		
}

