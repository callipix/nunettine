package kr.or.ddit.board.freeboard.controller;

import java.io.File;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.List;
import java.util.Map;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.ResponseBody;

import kr.or.ddit.board.freeboard.service.LbrtyBbscttService;
import kr.or.ddit.vo.LbrtyBbscttAnswerVO;
import kr.or.ddit.vo.LbrtyBbscttVO;
import kr.or.ddit.vo.LbrtyBbscttVO2;
import lombok.extern.slf4j.Slf4j;

@Slf4j
@RequestMapping("/lbrtybbsctt")
@Controller



public class LbrtyBbscttController {

	@Autowired
	String uploadFolder;

	@Autowired
	LbrtyBbscttService lbrtyBbscttService;

	@GetMapping("/read")
	public String read(Model model) {

		List<LbrtyBbscttVO2> list = this.lbrtyBbscttService.lbrtyBbscttList();
		log.info("list : " + list);

		model.addAttribute("lbrtyBbscttList", list);

		return "lbrtybbsctt/read";
	}
	
	@GetMapping("/read2")
	public String read2(Model model) {

		List<LbrtyBbscttVO2> list = this.lbrtyBbscttService.lbrtyBbscttList();
		log.info("list : " + list);

		model.addAttribute("lbrtyBbscttList", list);

		return "lbrtybbsctt/read2";
	}
	
	@GetMapping("/detail")
	public String detail(int lbrtyBbscttNo, Model model) {
		log.info("detail->lbrtyBbscttNo : " + lbrtyBbscttNo);
		LbrtyBbscttVO detail = this.lbrtyBbscttService.lbrtyBbscttDetail(lbrtyBbscttNo);
		// List<LbrtyBbscttVO2> list = this.lbrtyBbscttService.lbrtyBbscttList();
		// log.info("list : " + list);
		log.info("detail : " + detail);

		model.addAttribute("detail", detail);

		return "lbrtybbsctt/detail";
	}

	@GetMapping("/delete")
	public String delete(LbrtyBbscttVO lbrtyBbscttVO, Model model) {
		log.info("lbNO : "+lbrtyBbscttVO.getLbrtyBbscttNo());
		log.info("sqNO : " + lbrtyBbscttVO.getSprviseAtchmnflNo());
		//log.info("detail->lbrtyBbscttNo : " + lbrtyBbscttNo);
		int result = this.lbrtyBbscttService.lbrtyBbscttDelete(lbrtyBbscttVO);
		result += this.lbrtyBbscttService.sprviseAtchmnflDelete(lbrtyBbscttVO);
		log.info("result : " + result);

		/*
		 * List<LbrtyBbscttVO2> list = this.lbrtyBbscttService.lbrtyBbscttList();
		 * log.info("list : " + list);
		 * 
		 * model.addAttribute("lbrtyBbscttList",list);
		 */

		return "redirect:read";
	}
	
	//insert 홈페이지 이동
	@GetMapping("/insert")
	public String insert() {

		return "lbrtybbsctt/registerTest";
	}
	
	//자유 게시글 등록
	@PostMapping("/create")
	public String create(LbrtyBbscttVO lbrtyBbscttVO) {

		log.info("넘어 왔네");
		log.info("create lbrtyBbscttVO : " + lbrtyBbscttVO);

		
		File uploadPath = new File(uploadFolder,getFolder());
		
		// 연원일 폴더 생성 실행
		if(uploadPath.exists()==false) { 
			uploadPath.mkdirs(); 
		}
		
		int result = this.lbrtyBbscttService.lbrtyBbscttInsert(lbrtyBbscttVO); //스프링
		log.info("lbrtyBbscttInsert->result : " + result);
		//파일 객체 
		//MultipartFile[] multipartFile = lbrtyBbscttVO.getUploadFile();
		
		return "redirect:read";
	}

	public String getFolder() {
		// 2024-01-30 형식(format) 지정
		// 간단한 날짜 형식
		SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd");
		// 날짜 객체 생성(java.util 패키지)
		Date date = new Date();
		// 2024-01-30
		String str = sdf.format(date);
		// 2024-01-30 -> 2024\\01\\30
		return str.replace("-", File.separator);
	}
	
	//----------------------비동기 방식 ------------------------------------
	
	//게시글 삭제
	@ResponseBody
	@PostMapping("/bbsDelete")
	public int bbsDelete(@RequestBody LbrtyBbscttVO lbrtyBbscttVO) {
		log.info("bbsDelete -> LbrtyBbscttVO : " + lbrtyBbscttVO);
		int result = 0;
		result = this.lbrtyBbscttService.lbrtyBbscttDelete(lbrtyBbscttVO);
		return result;
	}
	
	//게시글 수정
	@ResponseBody
	@PostMapping("/bbsUpdate")
	public int bbsUpdate(@RequestBody LbrtyBbscttVO lbrtyBbscttVO) {
		log.info("bbsUpdate -> LbrtyBbscttVO : " + lbrtyBbscttVO);
		int result = 0;
		result = this.lbrtyBbscttService.lbrtyBbscttUpdate(lbrtyBbscttVO);
		return result;
	}
	
	//아작스 댓글 리스트 조회
	@ResponseBody
	@RequestMapping(value="/listAns",method=RequestMethod.POST)
	public List<LbrtyBbscttAnswerVO> listAns(@RequestBody Map<String, Object> map){
		String lbrtyBbscttNo = (String)map.get("lbrtyBbscttNo");
		log.info("lbrtyBbscttNo : " + lbrtyBbscttNo);
		List<LbrtyBbscttAnswerVO> listAnsVO = this.lbrtyBbscttService.lbrtyBbscttAnswerList(lbrtyBbscttNo);
		return listAnsVO;
	}
	
	//아작스 댓글 입력
	@ResponseBody
	@PostMapping("/insertAns")
	public int insertAns(@RequestBody LbrtyBbscttAnswerVO lbrtyBbscttAnswerVO) {
		
		log.info("lbrtyBbscttAnswerCn : " + lbrtyBbscttAnswerVO);
		int result = 0;
		result = this.lbrtyBbscttService.lbrtyBbscttAnswerInsert(lbrtyBbscttAnswerVO);
		return result;
	}
	//아작스 댓글 삭제
	@ResponseBody
	@PostMapping("/deleteAns")
	public int deleteAns(@RequestBody LbrtyBbscttAnswerVO lbrtyBbscttAnswerVO) {
		
		log.info("deleteAns -> lbrtyBbscttAnswerVO : " + lbrtyBbscttAnswerVO);
		int result = 0;
		result = this.lbrtyBbscttService.lbrtyBbscttAnswerDelete(lbrtyBbscttAnswerVO);
		return result;
	}
	
	//아작스 댓글 수정
	@ResponseBody
	@PostMapping("/updataAns")
	public int updataAns(@RequestBody LbrtyBbscttAnswerVO lbrtyBbscttAnswerVO) {
		log.info("updataAns -> lbrtyBbscttAnswerVO : " + lbrtyBbscttAnswerVO);
		int result = 0;
		result = this.lbrtyBbscttService.lbrtyBbscttAnswerUpdate(lbrtyBbscttAnswerVO);
		return result;
	}


}
