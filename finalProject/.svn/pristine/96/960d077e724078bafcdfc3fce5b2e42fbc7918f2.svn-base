<%@ page language="java" contentType="text/html; charset=UTF-8" pageEncoding="UTF-8"%>
<%@ taglib prefix="c" uri="http://java.sun.com/jsp/jstl/core" %>
<%@ taglib prefix="fmt" uri="http://java.sun.com/jsp/jstl/fmt" %>
<script src="https://cdn.ckeditor.com/ckeditor5/34.0.0/classic/ckeditor.js"></script>
<script src="https://cdn.ckeditor.com/ckeditor5/34.0.0/classic/translations/ko.js"></script>
<script type="text/javascript" src="https://ajax.googleapis.com/ajax/libs/jquery/3.4.1/jquery.min.js"></script>
<style>
.ck-editor__editable {
min-height: 400px;
}
label {
display: block;
}
</style>
<script>
/*
게시글 번호(자동증가 , sequence)		proStoryBbscttNo	
게시글 제목(직접입력)					proStoryBbscttSj
게시글 내용(직접입력)					proStoryBbscttCn
게시글 작성일자(sysdate)				proStoryBbscttWrDt
게시글 추천수(별도)					proStoryBbscttRecommend
게시글 조회수(별도)					proStoryBbscttRdcnt
프로이야기게시글썸네일사진(직접입력)		proStoryBbscttThumbPhoto
통합첨부파일(사진, 직접입력)			sprviceAtchmnflNo
프로아이디							proId
*/
$(function(){
	
		document.getElementById("inputImgs").addEventListener("change", handleImg);
		
		let clsCiImgUrl = document.getElementById("clsCiImgUrl");
		//e : onchange 이벤트 객체
		function handleImg(e){
			console.log("이미지 테스트");
			//이벤트가 발생 된 타겟 안에 들어있는 이미지 파일들을 가져와보자
			let files = e.target.files;
			//이미지가 여러개가 있을 수 있으므로 이미지들을 각각 분리해서 배열로 만듦
			let fileArr = Array.prototype.slice.call(files);
			//파일 타입의 배열 반복. f : 배열 안에 들어있는 각각의 이미지 파일 객체
			$("#clsCiImgUrl").html("");
			
			fileArr.forEach(function(f){
				//이미지 파일이 아닌 경우 이미지 미리보기 실패 처리(MIME타입)
				if(!f.type.match("image.*")){
					alert("이미지 확장자만 가능합니다.");
					//함수 종료
					return;
				}
				//이미지 객체를 읽을 자바스크립트의 reader 객체 생성
				let reader = new FileReader();

				//e : reader가 이미지 객체를 읽는 이벤트
				reader.onload = function(e){
					//e.target : f(이미지 객체)
					let img = "<img src="+e.target.result+" style='width:30%' />";
// 					let img = document.createElement("img");
// 					img.src = e.target.result;
// 					img.style.width = '30%';
// 					img.style.height = '30%';
					
					$("#clsCiImgUrl").append(img);	
// 	 				clsCiImgUrl.appendChild(img);
				}
				//f : 이미지 파일 객체를 읽은 후 다음 이미지 파일(f)을 위해 초기화 함
				reader.readAsDataURL(f);
			});//end forEach
		}
		
		$(".ck-blurred").keyup(function () {	
			console.log("str : " + window.editor.getData());
			$("#proStoryContent").val(window.editor.getData());
		});
		
		$(".ck-blurred").on("focusout",function () {
		// focusout : 커서가 영역 밖으로 나올때 마지막 데이터까지 추가
			$("#proStoryContent").val(window.editor.getData());
		});
		
		$("#btnStory").on("click" , function(){
			
			let subject   = $("#proStoryBbscttSj").val();
			let content   = $("#proStoryBbscttCn").val(window.editor.getData()).val();
			
			let inputImgs = document.getElementById("inputImgs"); // 수정

	        if (!inputImgs) {
	            console.error("#inputImgs element not found.");
	            return;
	        }

	        let files = inputImgs.files;

 			let formData = new FormData();

 			formData.append("subject" , subject);
 			formData.append("content" , content);
//  			formData.append("inputImgs" , inputImgs);
 			
 			for(let i = 0 ; i < files.length ; i++){
 				formData.append("uploadFile" , inputImgs[i]);
 			}
 			
 			console.log("formData : " + formData);
			
			console.log("proStoryBbscttSj : " + subject);
			console.log("proStoryBbscttCn : " + content);
			let proStoryBbscttVO =
			{
					proStoryBbscttSj : subject,
					proStoryBbscttCn : content
			}
			console.log("prostorybbscttVO.proStoryBbscttSj : " + proStoryBbscttVO.proStoryBbscttSj);
			console.log("prostorybbscttVO.proStoryBbscttCn : " + proStoryBbscttVO.proStoryBbscttCn);
			
			if(confirm("글을 작성 하시겠습니까?")){		}
			
			$.ajax({
					url: "insert",
					type : "post",
					data : proStoryBbscttVO,
					success : function(result){
						console.log("result :" + result);
				}
			})
		})
})
</script>

<!--  -->

<div class="card">
	<div class="card-body">
		<h4 class="card-title"></h4>
		<p class="card-description">

		<form action="#" name="frm" class="forms-sample" method="post" enctype="multipart/form-data">

			<input type="hidden" class="form-control" id="" name="" value="" required />

			<div class="form-group">
					<label for="proStoryBbscttSj">제목
						<input type="text" class="form-control" id="proStoryBbscttSj" name="proStoryBbscttSj" placeholder="제목을 입력해주세요" required>
					<c:out value="${proStoryBbscttSj}"></c:out>
					</label>
			</div>

			<div class="form-group">
				<div id="proStoryContent">
				<label for="proStoryBbscttCn">내용
				<textarea class="form-control" name="proStoryBbscttCn" id="proStoryBbscttCn" rows="10" style="display: none;">
				<c:out value="${proStoryBbscttCn}"></c:out>
				</textarea>
				</label>		
				</div>
			</div>

			<div id="clsCiImgUrl">
				<div class="form-group">썸네일을 골라주세요<br>
					<input type="file" id="inputImgs" name="uploadFile" placeholder="" multiple="multiple">
<%-- 					<c:out value="${proStoryBbscttThumbPhoto}"></c:out> --%>
				</div>
			</div>

			<button type="button" id="btnStory" class="btn btn-primary mr-2">등록</button>
			<button class="btn btn-light">취소</button>
		</form>
	</div>
</div>

<script type="text/javascript">
// function MyCustomUploadAdapterPlugin(editor) {
//     editor.plugins.get('FileRepository').createUploadAdapter = (loader) => {
//         return new UploadAdapter(loader)
//     }
// }
// ClassicEditor.create(document.querySelector('#ckStudDet'),
// 		{ ckfinder : { uploadUrl : '/upload/uploadCk'} , extraPlugins:[MyCustomUploadAdapterPlugin] , language : "ko" })
// .then(editor=>{window.editor=editor;})
// .catch(err=>{console.error(err.stack);});
// ClassicEditor.create(document.querySelector('#thumb'),
// 		{ ckfinder : { uploadUrl : '/upload/thumb'} , language : "ko" })
// .then(editor=>{window.editor=editor;})
// .catch(err=>{console.error(err.stack);});
ClassicEditor.create(document.querySelector('#proStoryContent'),
		{ ckfinder : { uploadUrl : '/upload/uploadCk'} , language : "ko" })
.then(editor=>{window.editor=editor;})
.catch(err=>{console.error(err.stack);});
</script>

<!--  -->
