package kr.or.ddit.chatting.controller;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpSession;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.ResponseBody;
import org.springframework.web.servlet.ModelAndView;
import org.springframework.web.servlet.mvc.support.RedirectAttributes;

import kr.or.ddit.chatting.Check;
import kr.or.ddit.chatting.service.ChatRoomRepository;
import kr.or.ddit.chatting.service.ChatService;
import kr.or.ddit.chatting.vo.ChatRelayVO;
import kr.or.ddit.chatting.vo.ChatRoomVO;
import lombok.RequiredArgsConstructor;
import lombok.extern.slf4j.Slf4j;

@Slf4j
@Controller
@RequiredArgsConstructor
@RequestMapping("/chat")
public class RoomController {
	private final ChatRoomRepository repository;
	
	@Autowired
	private ChatService chatService;
	
	// 채팅방 목록 조회
	@GetMapping("/rooms")
	public ModelAndView rooms() {
		log.info("# All Chat Rooms");
		System.out.println("채팅방 목록 조회");
		ModelAndView mav = new ModelAndView("chat/rooms");
		mav.addObject("list" , repository.findAllRooms());
		return mav;
	}
	
	// 채팅방 목록 조회
	@GetMapping("/roomList")
	public String RoomList(ModelAndView mav){
		
		List<ChatRoomVO> chatRoomList = new ArrayList<>();
		chatRoomList = this.chatService.chatRoomList();
		
		if(!chatRoomList.isEmpty()) {
			mav.addObject("chatRoomList", chatRoomList);
		}
		mav.setViewName("chat/roomList");
		return "chat/roomList?"+chatRoomList;
	}
	
	// 채팅방 개설
	@ResponseBody
	@SuppressWarnings("rawtypes")
	@PostMapping("/roomCreate")
	public String create(@RequestBody String name , RedirectAttributes rttr , HttpServletRequest request) {
		
		HttpSession session = request.getSession();
		
		ChatRoomVO chatRoomVO = new ChatRoomVO(); ChatRelayVO chatRelayVO = new ChatRelayVO();

		String userId = ((HashMap)(session.getAttribute("memSession"))).get("userId").toString();
		chatRoomVO.setUserId(userId); chatRelayVO.setUserId(userId); chatRoomVO.setRoomName(name);		// 채팅방에 방제목
		
		System.out.println("중계테이블 유저 아이디" +chatRelayVO.getUserId());
		int result = this.chatService.insertRoom(chatRoomVO);
		log.info("insertRoom result : " + result);
		return "success";
	}
	@GetMapping("/roomCreate")
	public String roomCreate() {
		System.out.println("roomCreate 이동성공");
		return "chat/roomCreate";
	}
	
	// 특정 채팅방 조회
	@GetMapping("/room")
	public void getRoom(int roomNo , Model model) {
		log.info("# get Chat Room , roomNo : " + roomNo);
		model.addAttribute("room" , repository.findRoomById(roomNo));
	}

}
